# Example for: Model.assess_normalized_dope()

#Modified from assess_normalized_dope by Tomás Cáceres <caceres.tomas@uc.cl>

#Assess z-score of N models

#Suggested use in terminal
#python3 assess_normalized_dope_modified.py > models_Z-score.log

from modeller import *
from modeller.scripts import complete_pdb

env = Environ()
env.libs.topology.read(file='$(LIB)/top_heav.lib')
env.libs.parameters.read(file='$(LIB)/par.lib')

#You should change this two variables
model_id = 'AFB5'
N_models = 50


for i in range(1, N_models + 1):

	if i < 10:
		# Read a model previously generated by Modeller's AutoModel class
		mdl = complete_pdb(env, './{}.B9999000{}.pdb'.format(model_id, i))

		zscore = mdl.assess_normalized_dope()
		print('Z-score Model {}.B9999000{}.pdb: {}'.format(model_id, i, zscore))

	else:
		mdl = complete_pdb(env, './{}.B999900{}.pdb'.format(model_id, i))
		zscore = mdl.assess_normalized_dope()
		print('Z-score Model {}.B999900{}.pdb: {}'.format(model_id, i, zscore))


