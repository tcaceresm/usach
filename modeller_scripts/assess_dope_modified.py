#Modified from assess_dope.py by Tomás Cáceres <caceres.tomas@uc.cl>

#Assess dope score of N models
#Remember to check model_id and N_models variables

#Suggested use in terminal
#python3 assess_dope_modified.py > models_DOPE-score.log


from modeller import *
from modeller.scripts import complete_pdb

env = Environ()
env.libs.topology.read(file='$(LIB)/top_heav.lib')
env.libs.parameters.read(file='$(LIB)/par.lib')


#You should change this two variables
model_id = 'AFB3'
N_models = 20

for i in range(1, N_models + 1):

	if i < 10:

		# Read a model previously generated by Modeller's AutoModel class
		mdl = complete_pdb(env, './{}.B9999000{}.pdb'.format(model_id, i))
		atmsel = Selection(mdl)
		score = atmsel.assess_dope()
		print('DOPE-score of Model {}.B9999000{}.pdb: {}'.format(model_id, i, score))

	else:

		mdl = complete_pdb(env, './{}.B999900{}.pdb'.format(model_id, i))		
		atmsel = Selection(mdl)
		score = atmsel.assess_dope()
		print('DOPE-score of Model {}.B9999000{}.pdb: {}'.format(model_id, i, score))
